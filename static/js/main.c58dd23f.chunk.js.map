{"version":3,"sources":["components/visualize/DayUnit.tsx","components/FileInput.tsx","App.tsx","Logic/parseCSV.ts","reportWebVitals.ts","index.tsx"],"names":["DayUnit","duration","DayComponent","styled","div","props","durationHeight","durationColor","durationNum","parseInt","FileInput","setInputFile","onUploadImage","useCallback","e","currentTarget","files","style","background","padding","margin","type","accept","onChange","App","useState","inputFile","readCSV","setReadCSV","useEffect","reader","FileReader","onload","result","readAsText","calendar","csvString","origin","split","pop","rows","map","line","lineCols","startTime","DateTime","fromFormat","endTime","sleepTime","wakingInBed","timeToSleep","goodQuality","deepSleep","heartRate","tag","annotation","slice","dateMappedRows","reduce","obj","data","toFormat","initDateTime","weekday","startOf","minus","days","durationDays","length","endOf","diff","weekNum","i","date","plus","push","parseCSV","OuterContainer","Title","Message","Days","dayOfWeek","Frame","flat","col","console","log","undefined","setLocale","toString","substring","replace","h1","Date","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c58dd23f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ninterface IDay {\n  duration: string;\n}\n\nexport const DayUnit = ({ duration }: IDay) => {\n  return <DayComponent duration={duration}>{duration}</DayComponent>;\n};\n\ninterface IDayDesign {\n  duration: string;\n}\n\nconst DayComponent = styled.div<IDayDesign>`\n  display: flex;\n  -webkit-align-items: center;\n  align-items: center;\n  -webkit-justify-content: center;\n  justify-content: center;\n  border-radius: 4px;\n  height: ${(props) => durationHeight(props.duration)};\n  width: 60px;\n  margin: 4px;\n  color: white;\n  background: ${(props) => durationColor(props.duration)};\n` as any;\n\nconst durationColor = (duration: string) => {\n  const durationNum = parseInt(duration, 10);\n  if (durationNum >= 8) {\n    return \"#43a2e2dd\";\n  } else if (durationNum >= 6) {\n    return \"#54c454dd\";\n  } else if (durationNum >= 4) {\n    return \"#c47636dd\";\n  } else if (durationNum >= 2) {\n    return \"#DD0000dd\";\n  } else {\n    return \"#000000dd\";\n  }\n};\n\nconst durationHeight = (duration: string) => {\n  const durationNum = parseInt(duration, 10);\n  const height = `${durationNum * 1.5 + 20}px`;\n  return height;\n};\n","import { useCallback } from \"react\";\n\nexport interface IInputFile {\n  setInputFile: React.Dispatch<React.SetStateAction<File | undefined>>;\n}\n\nexport const FileInput = ({ setInputFile }: IInputFile) => {\n  const onUploadImage = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.currentTarget.files !== null) {\n        setInputFile(e.currentTarget.files[0]);\n      }\n    },\n    [setInputFile]\n  );\n\n  return (\n    // <>\n    <div style={{ background: \"#FFFFFFDD\", padding: \"4px\", margin: \"8px\" }}>\n      <input type=\"file\" accept=\"text\" onChange={onUploadImage} />\n    </div>\n    // </>\n  );\n};\n","import styled from \"styled-components\";\nimport { DayUnit } from \"./components/visualize\";\nimport { useEffect, useState } from \"react\";\nimport { FileInput } from \"./components/FileInput\";\nimport { ICol, parseCSV } from \"./Logic/parseCSV\";\n\nexport const App = () => {\n  const [inputFile, setInputFile] = useState<File | undefined>();\n  const [readCSV, setReadCSV] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (inputFile) {\n      const reader = new FileReader();\n      reader.onload = () => setReadCSV(reader.result as string);\n      reader.readAsText(inputFile, \"UTF-8\");\n    }\n  }, [inputFile]);\n\n  const calendar = parseCSV(readCSV);\n\n  return (\n    <>\n      <OuterContainer>\n        <Title>Sleepvis</Title>\n        <Message>\n          AutosleepアプリのCSVを可視化するWebアプリです．\n          <br />\n          随時機能追加中です．現状は，睡眠時間の表示機能のみになります．\n          <br />\n          下のファイルを選択ボタンからエクスポートしたCSVファイルを選択してください．\n        </Message>\n        <FileInput setInputFile={setInputFile} />\n        <Days>\n          {[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map(\n            (dayOfWeek) => {\n              return (\n                <Frame>\n                  <DayUnit duration={dayOfWeek} />\n                </Frame>\n              );\n            }\n          )}\n        </Days>\n        {calendar && (\n          <Days>\n            {calendar.flat().map((col: ICol | string) => {\n              console.log(col);\n              if (typeof col !== \"string\" && col.endTime !== undefined) {\n                return (\n                  <Frame>\n                    <Date>{col.endTime.setLocale(\"jp\").toFormat(\"MM/dd\")}</Date>\n                    <DayUnit duration={col.sleepTime} />\n                  </Frame>\n                );\n              } else {\n                return (\n                  <Frame>\n                    <Date>{`${col\n                      .toString()\n                      .substring(5, 10)\n                      .replace(\"-\", \"/\")}`}</Date>\n                    <DayUnit duration={\"NoData\"} />\n                  </Frame>\n                );\n              }\n            })}\n          </Days>\n        )}\n      </OuterContainer>\n    </>\n  );\n};\n\nconst OuterContainer = styled.div`\n  margin-top: 2em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n`;\n\nconst Title = styled.h1`\n  color: #ffffff;\n`;\n\nconst Message = styled.div`\n  color: #ffffff;\n`;\n\nconst Date = styled.div`\n  color: white;\n  margin-top: 2px;\n`;\n\nconst Frame = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-flow: column;\n  height: 80px;\n  border: 1px ridge #ffffff99;\n  /* border-radius: 4px; */\n  background: linear-gradient(#08176d99, #01010799);\n  margin: 1px;\n`;\n\nconst Days = styled.div`\n  width: calc(74px * 7);\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-end;\n`;\n","import { DateTime } from \"luxon\";\n\nexport const parseCSV = (csvString: string) => {\n  if (csvString === \"\") {\n    return false;\n  }\n  // CSVString を オブジェクトの配列に\n\n  const origin = csvString.split(\"\\r\\n\");\n  origin.pop();\n\n  const rows: ICol[] = origin\n    .map((line) => {\n      const lineCols = line.split(\",\");\n      return {\n        startTime: DateTime.fromFormat(lineCols[0], \"yyyy-MM-dd HH:mm:ss\"),\n        endTime: DateTime.fromFormat(lineCols[1], \"yyyy-MM-dd HH:mm:ss\"),\n        duration: lineCols[2],\n        sleepTime: lineCols[3],\n        wakingInBed: lineCols[4],\n        timeToSleep: lineCols[5],\n        goodQuality: lineCols[6],\n        deepSleep: lineCols[7],\n        heartRate: lineCols[8],\n        tag: lineCols[9],\n        annotation: lineCols[10],\n      };\n    })\n    .slice(1);\n\n  interface IDateMappedRow {\n    [key: string]: ICol;\n  }\n\n  const dateMappedRows: IDateMappedRow = rows.reduce(\n    (obj, data) => ({\n      ...obj,\n      [data.endTime.toFormat(\"yyyy-MM-dd-EEE\")]: data,\n    }),\n    {}\n  );\n\n  const initDateTime: DateTime =\n    rows[0].endTime.weekday !== 7\n      ? rows[0].endTime.startOf(\"week\").minus({ days: 1 })\n      : rows[0].endTime.startOf(\"day\");\n\n  const endDateTime: DateTime = rows[rows.length - 1].endTime\n    .endOf(\"week\")\n    .startOf(\"day\");\n\n  const durationDays = endDateTime.diff(initDateTime, \"days\").days;\n\n  const calendar: Array<Array<ICol | string>> = [];\n\n  let weekNum = 0;\n  for (let i = 0; i < durationDays; i++) {\n    const cnt = initDateTime.plus({ days: i });\n    const date = cnt.toFormat(\"yyyy-MM-dd-EEE\");\n    if (weekNum === calendar.length) {\n      calendar.push([]);\n    }\n\n    calendar[weekNum].push(dateMappedRows[date] ? dateMappedRows[date] : date);\n\n    if (i % 7 === 6) {\n      weekNum++;\n    }\n  }\n\n  return calendar;\n};\n\nexport interface ICol {\n  startTime: DateTime; //  睡眠開始時刻\n  endTime: DateTime; //  睡眠終了時刻\n  duration: string; //  Duration\n  sleepTime: string; //  睡眠時間\n  wakingInBed: string; //  ベッドで起きていた時間\n  timeToSleep: string; //  眠りにつくまでの時間\n  goodQuality: string; //  良質な睡眠\n  deepSleep: string; //  深い睡眠\n  heartRate: string; //  心拍数\n  tag: string; //  タグ\n  annotation: string; //  注釈\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}